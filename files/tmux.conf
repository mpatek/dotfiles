set -g default-terminal "screen-256color"

# remap prefix to `
unbind C-b
set -g prefix `
bind ` send-prefix
bind-key L last-window

set -g default-terminal "screen-256color"

# start numbering at 1
set -g base-index 1

# Mouse
# Make mouse useful in copy mode
# setw -g mouse-mode on

# Allow mouse to select which pane to use
# set -g mouse-select-pane on

# Scroll history
set -g history-limit 30000

# lower escape timing from 500ms to 0
set -s escape-time 0

# hilight active window
set-window-option -g window-status-current-bg red

# turn on vi bindings in copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key M-7 resize-pane -t 1 -x 90
bind-key M-8 resize-pane -t 1 -x 60
bind-key M-9 resize-pane -t 1 -x 30
bind-key M-0 resize-pane -t 0 -x 30
